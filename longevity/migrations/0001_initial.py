# Generated by Django 4.2.1 on 2023-11-06 16:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agingclock',
            fields=[
                ('ac_id', models.AutoField(db_column='AC_id', primary_key=True, serialize=False)),
                ('actitle', models.CharField(blank=True, db_column='ACTitle', max_length=200, null=True)),
                ('acdesc', models.TextField(blank=True, db_column='ACDesc', null=True)),
            ],
            options={
                'db_table': 'agingclock',
            },
        ),
        migrations.CreateModel(
            name='Biomarker',
            fields=[
                ('bm_id', models.AutoField(db_column='BM_id', primary_key=True, serialize=False)),
                ('bmtitle', models.CharField(blank=True, db_column='BMTitle', max_length=100, null=True)),
                ('upper_limit', models.DecimalField(blank=True, db_column='Upper_limit', decimal_places=4, max_digits=9, null=True)),
                ('lower_limit', models.DecimalField(blank=True, db_column='Lower_limit', decimal_places=4, max_digits=9, null=True)),
                ('bmdesc', models.TextField(blank=True, db_column='BMDesc', null=True)),
            ],
            options={
                'db_table': 'biomarker',
            },
        ),
        migrations.CreateModel(
            name='Cellenteragent',
            fields=[
                ('agent_id', models.AutoField(db_column='Agent_id', primary_key=True, serialize=False)),
                ('agenttitle', models.TextField(blank=True, db_column='AgentTitle', null=True)),
                ('agentdesc', models.TextField(blank=True, db_column='AgentDesc', null=True)),
                ('entrancetype', models.IntegerField(blank=True, db_column='EntranceType', null=True)),
                ('receptor', models.TextField(blank=True, db_column='Receptor', null=True)),
            ],
            options={
                'db_table': 'cellenteragent',
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('cond_id', models.AutoField(primary_key=True, serialize=False)),
                ('condtitle', models.CharField(blank=True, db_column='condtitle', max_length=30, null=True)),
                ('conddesc', models.TextField(blank=True, db_column='conddesc', null=True)),
            ],
            options={
                'db_table': 'condition',
            },
        ),
        migrations.CreateModel(
            name='Convenience',
            fields=[
                ('conv_id', models.AutoField(db_column='Conv_id', primary_key=True, serialize=False)),
                ('convtitle', models.CharField(blank=True, db_column='ConvTitle', max_length=60, null=True)),
                ('convdesc', models.TextField(blank=True, db_column='ConvDesc', null=True)),
            ],
            options={
                'db_table': 'convenience',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(db_column='Country_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('countryname', models.CharField(blank=True, db_column='CountryName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Ddstep',
            fields=[
                ('step_id', models.AutoField(db_column='Step_id', primary_key=True, serialize=False)),
                ('ddstitle', models.CharField(blank=True, db_column='DDSTitle', max_length=60, null=True)),
                ('step', models.IntegerField(blank=True, db_column='Step', null=True)),
                ('medication', models.IntegerField(blank=True, db_column='Medication', null=True)),
                ('nonmedication', models.IntegerField(blank=True, db_column='NonMedication', null=True)),
                ('p_step', models.ForeignKey(blank=True, db_column='P_Step_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.ddstep')),
            ],
            options={
                'db_table': 'ddstep',
                'ordering': ['step'],
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('diagnosis_id', models.AutoField(db_column='diagnosis_id', primary_key=True, serialize=False)),
                ('diagnosis', models.CharField(blank=True, db_column='diagnosis', max_length=50, null=True)),
                ('nddesc', models.TextField(blank=True, db_column='NDDesc', null=True)),
                ('goldstandard', models.IntegerField(blank=True, db_column='GoldStandard', null=True)),
            ],
            options={
                'db_table': 'diagnosis',
            },
        ),
        migrations.CreateModel(
            name='Diagnostictest',
            fields=[
                ('diagnose_id', models.AutoField(db_column='Diagnose_id', primary_key=True, serialize=False)),
                ('diagtitle', models.CharField(blank=True, db_column='DiagTitle', max_length=100, null=True)),
                ('diagdesc', models.TextField(blank=True, db_column='DiagDesc', null=True)),
                ('sensitivity', models.DecimalField(blank=True, db_column='Sensitivity', decimal_places=2, max_digits=6, null=True)),
                ('dtspecificity', models.DecimalField(blank=True, db_column='DTSpecificity', decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'db_table': 'diagnostictest',
            },
        ),
        migrations.CreateModel(
            name='DoseUnit',
            fields=[
                ('unit_id', models.AutoField(db_column='unit_id', primary_key=True, serialize=False)),
                ('doseunit', models.CharField(blank=True, db_column='doseunit', max_length=50, null=True)),
                ('abbreviation', models.CharField(blank=True, db_column='abbreviation', max_length=20, null=True)),
            ],
            options={
                'db_table': 'doseunit',
            },
        ),
        migrations.CreateModel(
            name='Drawback',
            fields=[
                ('drawback_id', models.AutoField(db_column='DrawBack_id', primary_key=True, serialize=False)),
                ('dbtitle', models.CharField(blank=True, db_column='DBTitle', max_length=100, null=True)),
                ('dbdesc', models.TextField(blank=True, db_column='DBDesc', null=True)),
            ],
            options={
                'db_table': 'drawback',
            },
        ),
        migrations.CreateModel(
            name='Drawbacktype',
            fields=[
                ('dbt_id', models.AutoField(db_column='DBT_id', primary_key=True, serialize=False)),
                ('dbttitle', models.CharField(blank=True, db_column='DBTTitle', max_length=100, null=True)),
                ('dbtdesc', models.TextField(blank=True, db_column='DBTDesc', null=True)),
            ],
            options={
                'db_table': 'drawbacktype',
            },
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('drug_id', models.AutoField(db_column='Drug_id', primary_key=True, serialize=False)),
                ('drugname', models.TextField(blank=True, db_column='DrugName', null=True)),
                ('genericname', models.TextField(blank=True, db_column='GenericName', null=True)),
                ('drugdesc', models.TextField(blank=True, db_column='DrugDesc', null=True)),
                ('drugtype', models.IntegerField(blank=True, db_column='DrugType', null=True)),
            ],
            options={
                'db_table': 'drug',
            },
        ),
        migrations.CreateModel(
            name='Dye',
            fields=[
                ('dye_id', models.AutoField(db_column='Dye_id', primary_key=True, serialize=False)),
                ('dyetitle', models.TextField(blank=True, db_column='DyeTitle', null=True)),
                ('dyedesc', models.TextField(blank=True, db_column='DyeDesc', null=True)),
            ],
            options={
                'db_table': 'dye',
            },
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('edge_id', models.AutoField(db_column='Edge_id', primary_key=True, serialize=False)),
                ('edgeshape', models.IntegerField(blank=True, db_column='EdgeShape', null=True)),
                ('color', models.IntegerField(blank=True, db_column='Color', null=True)),
                ('edgetype', models.IntegerField(blank=True, db_column='EdgeType', null=True)),
                ('edgedesc', models.TextField(blank=True, db_column='EdgeDesc', null=True)),
            ],
            options={
                'db_table': 'edge',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('edu_id', models.AutoField(db_column='Edu_id', primary_key=True, serialize=False)),
                ('edudegree', models.IntegerField(blank=True, db_column='EduDegree', null=True)),
            ],
            options={
                'db_table': 'education',
            },
        ),
        migrations.CreateModel(
            name='Externalfactor',
            fields=[
                ('ef_id', models.AutoField(db_column='EF_id', primary_key=True, serialize=False)),
                ('eftype', models.IntegerField(blank=True, db_column='EFType', null=True)),
                ('efdesc', models.TextField(blank=True, db_column='EFDesc', null=True)),
            ],
            options={
                'db_table': 'externalfactor',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('field_id', models.AutoField(db_column='Field_id', primary_key=True, serialize=False)),
                ('fieldtitle', models.CharField(blank=True, db_column='FieldTitle', max_length=255, null=True)),
                ('engagement', models.IntegerField(blank=True, db_column='Engagement', null=True)),
                ('fielddesc', models.TextField(blank=True, db_column='FieldDesc', null=True)),
            ],
            options={
                'db_table': 'field',
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('gene_id', models.AutoField(db_column='gene_id', primary_key=True, serialize=False)),
                ('gsymbol', models.CharField(blank=True, db_column='Gsymbol', max_length=10, null=True)),
                ('genename', models.CharField(blank=True, db_column='GeneName', max_length=30, null=True)),
                ('gsignificant', models.IntegerField(blank=True, db_column='GSignificant', null=True)),
            ],
            options={
                'db_table': 'gene',
            },
        ),
        migrations.CreateModel(
            name='GeneSet',
            fields=[
                ('gs_id', models.AutoField(primary_key=True, serialize=False)),
                ('gstitle', models.CharField(blank=True, db_column='gstitle', max_length=50, null=True)),
                ('gsdesc', models.TextField(blank=True, db_column='gsdesc', null=True)),
            ],
            options={
                'db_table': 'geneset',
            },
        ),
        migrations.CreateModel(
            name='Hallmark',
            fields=[
                ('hallmark_id', models.AutoField(db_column='Hallmark_id', primary_key=True, serialize=False)),
                ('hallmarktitle', models.CharField(blank=True, db_column='HallmarkTitle', max_length=50, null=True)),
                ('hallmarkdesc', models.TextField(blank=True, db_column='HallmarkDesc', null=True)),
                ('p_hm', models.ForeignKey(blank=True, db_column='P_hm_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.hallmark')),
            ],
            options={
                'db_table': 'hallmark',
            },
        ),
        migrations.CreateModel(
            name='Intellectualproperty',
            fields=[
                ('ip_id', models.AutoField(db_column='IP_id', primary_key=True, serialize=False)),
                ('iptitle', models.CharField(blank=True, db_column='IPTitle', max_length=255, null=True)),
                ('patentnumber', models.IntegerField(blank=True, db_column='PatentNumber', null=True)),
                ('ipdate', models.DateField(blank=True, db_column='IPDate', null=True)),
            ],
            options={
                'db_table': 'intellectualproperty',
            },
        ),
        migrations.CreateModel(
            name='InteractionType',
            fields=[
                ('it_id', models.AutoField(primary_key=True, serialize=False)),
                ('interaction', models.CharField(blank=True, db_column='interaction', max_length=30, null=True)),
                ('typedesc', models.TextField(blank=True, db_column='typedesc', null=True)),
            ],
            options={
                'db_table': 'interactiontype',
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('intervention_id', models.AutoField(db_column='Intervention_id', primary_key=True, serialize=False)),
                ('interventiontitle', models.CharField(blank=True, db_column='InterventionTitle', max_length=100, null=True)),
                ('interventiondesc', models.TextField(blank=True, db_column='InterventionDesc', null=True)),
                ('materialcosts', models.FloatField(blank=True, db_column='MaterialCosts', null=True)),
                ('processcosts', models.FloatField(blank=True, db_column='ProcessCosts', null=True)),
                ('costeffectiveness', models.IntegerField(blank=True, db_column='CostEffectiveness', null=True)),
                ('compare_factor', models.FloatField(blank=True, db_column='Compare_Factor', null=True)),
                ('intoutput', models.IntegerField(blank=True, db_column='IntOutput', null=True)),
                ('ichi', models.CharField(blank=True, db_column='ICHI', max_length=10, null=True)),
                ('comb_n', models.ForeignKey(blank=True, db_column='Comb_N_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('step', models.ForeignKey(blank=True, db_column='Step_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.ddstep')),
            ],
            options={
                'db_table': 'intervention',
            },
        ),
        migrations.CreateModel(
            name='InterventionSAE',
            fields=[
                ('isae_id', models.AutoField(primary_key=True, serialize=False)),
                ('isaedesc', models.TextField(blank=True, db_column='isaedesc', null=True)),
                ('doselimit', models.DecimalField(blank=True, db_column='doselimit', decimal_places=2, max_digits=10, null=True)),
                ('doseduration', models.IntegerField(blank=True, db_column='doseduration', null=True)),
            ],
            options={
                'db_table': 'intervention_sae',
            },
        ),
        migrations.CreateModel(
            name='InterventionStrategy',
            fields=[
                ('strategy_id', models.AutoField(db_column='Strategy_id', primary_key=True, serialize=False)),
                ('strategyname', models.CharField(blank=True, db_column='StrategyName', db_comment='Gene Therapy\n             Tissue Regeneration\n             Nanotherapy\n             Epigenome Modification', max_length=100, null=True)),
                ('strtegydesc', models.TextField(blank=True, db_column='StrtegyDesc', null=True)),
                ('strategylevel', models.IntegerField(blank=True, db_column='StrategyLevel', null=True)),
                ('medication', models.IntegerField(blank=True, db_column='Medication', null=True)),
                ('parent_s', models.ForeignKey(blank=True, db_column='Parent_S_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interventionstrategy')),
            ],
            options={
                'db_table': 'interventionstrategy',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('journal_id', models.AutoField(db_column='Journal_id', primary_key=True, serialize=False)),
                ('journalname', models.CharField(blank=True, db_column='JournalName', max_length=100, null=True)),
                ('impactf', models.DecimalField(blank=True, db_column='ImpactF', decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'journal',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('keyword_id', models.AutoField(db_column='Keyword_id', primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, db_column='Keyword', max_length=100, null=True)),
            ],
            options={
                'db_table': 'keyword',
            },
        ),
        migrations.CreateModel(
            name='Ligandtype',
            fields=[
                ('lt_id', models.AutoField(db_column='LT_id', primary_key=True, serialize=False)),
                ('lttitle', models.TextField(blank=True, db_column='LTTitle', null=True)),
                ('ltdesc', models.TextField(blank=True, db_column='LTDesc', null=True)),
            ],
            options={
                'db_table': 'ligandtype',
            },
        ),
        migrations.CreateModel(
            name='Linker',
            fields=[
                ('linker_id', models.AutoField(db_column='Linker_id', primary_key=True, serialize=False)),
                ('linkertitle', models.TextField(blank=True, db_column='LinkerTitle', null=True)),
                ('linkerdesc', models.TextField(db_column='LinkerDesc')),
            ],
            options={
                'db_table': 'linker',
            },
        ),
        migrations.CreateModel(
            name='Literature',
            fields=[
                ('lit_id', models.AutoField(db_column='Lit_id', primary_key=True, serialize=False)),
                ('doi', models.CharField(blank=True, db_column='DOI', max_length=50, null=True)),
                ('littitle', models.TextField(blank=True, db_column='LitTitle', null=True)),
                ('relevance', models.DecimalField(blank=True, db_column='Relevance', decimal_places=0, max_digits=8, null=True)),
                ('publishyear', models.DecimalField(blank=True, db_column='PublishYear', decimal_places=0, max_digits=4, null=True)),
                ('publishmonth', models.DecimalField(blank=True, db_column='PublishMonth', decimal_places=0, max_digits=2, null=True)),
                ('citation', models.TextField(blank=True, db_column='Citation', null=True)),
                ('isbn', models.TextField(blank=True, db_column='ISBN', null=True)),
            ],
            options={
                'db_table': 'literature',
            },
        ),
        migrations.CreateModel(
            name='Literaturetype',
            fields=[
                ('ltype_id', models.AutoField(db_column='LType_id', primary_key=True, serialize=False)),
                ('ltype', models.TextField(blank=True, db_column='LType', null=True)),
                ('classdesc', models.TextField(blank=True, db_column='ClassDesc', null=True)),
            ],
            options={
                'db_table': 'literaturetype',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('mat_id', models.AutoField(db_column='Mat_id', primary_key=True, serialize=False)),
                ('mattitle', models.TextField(blank=True, db_column='MatTitle', null=True)),
                ('matdesc', models.TextField(blank=True, db_column='MatDesc', null=True)),
            ],
            options={
                'db_table': 'material',
            },
        ),
        migrations.CreateModel(
            name='Nanocarrier',
            fields=[
                ('nc_id', models.AutoField(db_column='NC_id', primary_key=True, serialize=False)),
                ('nctitle', models.TextField(blank=True, db_column='NCTitle', null=True)),
                ('ncdesc', models.TextField(blank=True, db_column='NCDesc', null=True)),
            ],
            options={
                'db_table': 'nanocarrier',
            },
        ),
        migrations.CreateModel(
            name='Nanoparticle',
            fields=[
                ('np_id', models.AutoField(db_column='NP_id', primary_key=True, serialize=False)),
                ('linkerdesc', models.TextField(blank=True, db_column='LinkerDesc', null=True)),
                ('nptitle', models.TextField(blank=True, db_column='NPTitle', null=True)),
                ('npdesc', models.TextField(blank=True, db_column='NPDesc', null=True)),
                ('shape', models.TextField(blank=True, db_column='Shape', null=True)),
                ('dimx', models.DecimalField(blank=True, db_column='Dimx', decimal_places=0, max_digits=4, null=True)),
                ('dimy', models.DecimalField(blank=True, db_column='Dimy', decimal_places=0, max_digits=4, null=True)),
                ('dimz', models.DecimalField(blank=True, db_column='Dimz', decimal_places=0, max_digits=4, null=True)),
                ('echarge', models.DecimalField(blank=True, db_column='ECharge', decimal_places=1, max_digits=5, null=True)),
                ('ecdist', models.TextField(blank=True, db_column='ECDist', null=True)),
                ('hydrophobicity', models.TextField(blank=True, db_column='Hydrophobicity', null=True)),
                ('immuneresist', models.TextField(blank=True, db_column='ImmuneResist', null=True)),
                ('specificity', models.DecimalField(blank=True, db_column='Specificity', decimal_places=2, max_digits=6, null=True)),
                ('efficiency', models.DecimalField(blank=True, db_column='Efficiency', decimal_places=0, max_digits=8, null=True)),
                ('effectspeed', models.TextField(blank=True, db_column='EffectSpeed', null=True)),
                ('halflife', models.DecimalField(blank=True, db_column='HalfLife', decimal_places=0, max_digits=3, null=True)),
                ('excretion', models.TextField(blank=True, db_column='Excretion', null=True)),
                ('tracked', models.IntegerField(blank=True, db_column='Tracked', null=True)),
                ('peg', models.TextField(blank=True, db_column='PEG', null=True)),
                ('agent', models.ForeignKey(blank=True, db_column='Agent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.cellenteragent')),
                ('linker', models.ForeignKey(blank=True, db_column='Linker_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.linker')),
                ('nc', models.ForeignKey(blank=True, db_column='NC_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanocarrier')),
            ],
            options={
                'db_table': 'nanoparticle',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('node_id', models.IntegerField(db_column='Node_id', primary_key=True, serialize=False)),
                ('ref_num', models.CharField(blank=True, db_column='Ref_num', max_length=3, null=True)),
                ('nodecaption', models.CharField(blank=True, db_column='NodeCaption', max_length=254, null=True)),
                ('nodeshape', models.IntegerField(blank=True, db_column='NodeShape', null=True)),
                ('dash', models.IntegerField(blank=True, db_column='Dash', null=True)),
                ('nodecolor', models.IntegerField(blank=True, db_column='NodeColor', null=True)),
                ('container', models.IntegerField(blank=True, db_column='Container', null=True)),
                ('nodedesc', models.TextField(blank=True, db_column='NodeDesc', null=True)),
                ('severity_q', models.DecimalField(blank=True, db_column='Severity_Q', decimal_places=0, max_digits=3, null=True)),
                ('frequency_q', models.DecimalField(blank=True, db_column='Frequency_Q', decimal_places=0, max_digits=3, null=True)),
                ('speed_q', models.DecimalField(blank=True, db_column='Speed_Q', decimal_places=0, max_digits=3, null=True)),
                ('adsens', models.DecimalField(blank=True, db_column='ADSens', db_comment='Acceptable Diagnosis Sensitivity\n             ', decimal_places=2, max_digits=6, null=True)),
                ('adspec', models.DecimalField(blank=True, db_column='ADSpec', db_comment='Acceptable Diagnosis Specificity', decimal_places=2, max_digits=6, null=True)),
                ('hallmark', models.IntegerField(blank=True, db_column='Hallmark', null=True)),
                ('icd11', models.CharField(blank=True, db_column='ICD11', max_length=10, null=True)),
            ],
            options={
                'db_table': 'node',
                'ordering': ['ref_num'],
            },
        ),
        migrations.CreateModel(
            name='NodeIntervention',
            fields=[
                ('ni_id', models.AutoField(db_column='NI_id', primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(blank=True, db_column='Intervention_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.intervention')),
                ('node', models.ForeignKey(blank=True, db_column='Node_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.node')),
            ],
            options={
                'db_table': 'node_intervention',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('organization_id', models.AutoField(db_column='Organization_id', primary_key=True, serialize=False)),
                ('orgtitle', models.CharField(blank=True, db_column='OrgTitle', max_length=200, null=True)),
                ('parent_org_id', models.BigIntegerField(blank=True, db_column='Parent_org_id', null=True)),
                ('olrole', models.IntegerField(blank=True, db_column='OLRole', null=True)),
                ('orgdesc', models.TextField(blank=True, db_column='OrgDesc', null=True)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='Orgtype',
            fields=[
                ('ot_id', models.AutoField(db_column='OT_id', primary_key=True, serialize=False)),
                ('typetitle', models.TextField(blank=True, db_column='TypeTitle', null=True)),
            ],
            options={
                'db_table': 'orgtype',
                'db_table_comment': '1- Univerity\n2- Faculty - A department of University.\n',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('parameter_id', models.AutoField(db_column='Parameter_id', primary_key=True, serialize=False)),
                ('paratitle', models.CharField(blank=True, db_column='ParaTitle', max_length=100, null=True)),
                ('paraunit', models.CharField(blank=True, db_column='ParaUnit', max_length=50, null=True)),
                ('p_weight', models.FloatField(blank=True, db_column='P_Weight', null=True)),
            ],
            options={
                'db_table': 'parameter',
            },
        ),
        migrations.CreateModel(
            name='Perscondition',
            fields=[
                ('pc_id', models.AutoField(db_column='PC_id', primary_key=True, serialize=False)),
                ('pcdate', models.DateField(blank=True, db_column='PCDate', null=True)),
                ('pctime', models.TimeField(blank=True, db_column='PCTime', null=True)),
                ('pcondition', models.TextField(blank=True, db_column='PCondition', null=True)),
            ],
            options={
                'db_table': 'perscondition',
            },
        ),
        migrations.CreateModel(
            name='PersInt',
            fields=[
                ('pi_id', models.AutoField(db_column='PI_id', primary_key=True, serialize=False)),
                ('pidate', models.DateField(blank=True, db_column='PIDate', null=True)),
                ('pitime', models.TimeField(blank=True, db_column='PITime', null=True)),
                ('pidesc', models.TextField(blank=True, db_column='PIDesc', null=True)),
            ],
            options={
                'db_table': 'pers_int',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(db_column='Person_id', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=30, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=30, null=True)),
                ('gender', models.IntegerField(blank=True, db_column='Gender', null=True)),
                ('jobtitle', models.CharField(blank=True, db_column='JobTitle', max_length=100, null=True)),
                ('persondesc', models.TextField(blank=True, db_column='PersonDesc', null=True)),
                ('plrole', models.IntegerField(blank=True, db_column='PLRole', null=True)),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='Perstype',
            fields=[
                ('pt_id', models.AutoField(db_column='PT_id', primary_key=True, serialize=False)),
                ('pttitle', models.TextField(blank=True, db_column='PTTitle', null=True)),
            ],
            options={
                'db_table': 'perstype',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(db_column='Project_id', primary_key=True, serialize=False)),
                ('projtitle', models.CharField(blank=True, db_column='ProjTitle', max_length=255, null=True)),
                ('overallgoal', models.TextField(blank=True, db_column='overallgoal', null=True)),
                ('keyobjectives', models.TextField(blank=True, db_column='keyobjectives', null=True)),
                ('projectsource', models.IntegerField(blank=True, db_column='ProjectSource', null=True)),
                ('projdesc', models.TextField(blank=True, db_column='ProjDesc', null=True)),
                ('projstatus', models.IntegerField(blank=True, db_column='ProjStatus', null=True)),
                ('program', models.ForeignKey(blank=True, db_column='Program_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
            ],
            options={
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('prot_id', models.AutoField(db_column='Prot_id', primary_key=True, serialize=False)),
                ('prottitle', models.TextField(blank=True, db_column='ProtTitle', null=True)),
                ('protdesc', models.TextField(blank=True, db_column='ProtDesc', null=True)),
            ],
            options={
                'db_table': 'protocol',
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('requ_id', models.AutoField(db_column='Requ_id', primary_key=True, serialize=False)),
                ('reqtitle', models.CharField(blank=True, db_column='ReqTitle', max_length=100, null=True)),
                ('reqdesc', models.TextField(blank=True, db_column='ReqDesc', null=True)),
                ('req_type', models.IntegerField(blank=True, db_column='Req_type', null=True)),
            ],
            options={
                'db_table': 'requirement',
            },
        ),
        migrations.CreateModel(
            name='SAE',
            fields=[
                ('ae_id', models.AutoField(db_column='AE_id', primary_key=True, serialize=False)),
                ('aetitle', models.CharField(blank=True, db_column='AETitle', max_length=40, null=True)),
                ('aedesc', models.TextField(blank=True, db_column='AEDesc', null=True)),
                ('sae', models.IntegerField(blank=True, db_column='SAE', db_comment='Serious Adverse Event', null=True)),
            ],
            options={
                'db_table': 'sae',
            },
        ),
        migrations.CreateModel(
            name='Sbpathway',
            fields=[
                ('sbp_id', models.AutoField(db_column='SBP_id', primary_key=True, serialize=False)),
                ('sbtitle', models.CharField(blank=True, db_column='SBTitle', max_length=40, null=True)),
                ('sourcecode', models.CharField(blank=True, db_column='Sourcecode', max_length=10, null=True)),
                ('filelocation', models.TextField(blank=True, db_column='FileLocation', null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=20, null=True)),
                ('sblink', models.TextField(blank=True, db_column='SBLink', null=True)),
            ],
            options={
                'db_table': 'sbpathway',
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('species_id', models.AutoField(db_column='species_id', primary_key=True, serialize=False)),
                ('speciestitle', models.CharField(blank=True, db_column='SpeciesTitle', max_length=40, null=True)),
            ],
            options={
                'db_table': 'species',
            },
        ),
        migrations.CreateModel(
            name='StakeholderRole',
            fields=[
                ('role_id', models.AutoField(db_column='Role_id', primary_key=True, serialize=False)),
                ('shrole', models.CharField(blank=True, db_column='SHRole', max_length=255, null=True)),
                ('shroledesc', models.TextField(blank=True, db_column='SHRoleDesc', null=True)),
            ],
            options={
                'db_table': 'stakeholderrole',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.AutoField(db_column='Subject_id', primary_key=True, serialize=False)),
                ('subjecttitle', models.CharField(blank=True, db_column='SubjectTitle', max_length=50, null=True)),
                ('subjdesc', models.TextField(blank=True, db_column='SubjDesc', null=True)),
            ],
            options={
                'db_table': 'subject',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('symptom_id', models.AutoField(db_column='Symptom_id', primary_key=True, serialize=False)),
                ('symptitle', models.CharField(blank=True, db_column='SympTitle', max_length=100, null=True)),
                ('sympdesc', models.TextField(blank=True, db_column='SympDesc', null=True)),
            ],
            options={
                'db_table': 'symptom',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('target_id', models.AutoField(db_column='Target_id', primary_key=True, serialize=False)),
                ('targettitle', models.CharField(blank=True, db_column='TargetTitle', max_length=200, null=True)),
                ('targetdesc', models.TextField(blank=True, db_column='TargetDesc', null=True)),
            ],
            options={
                'db_table': 'target',
            },
        ),
        migrations.CreateModel(
            name='Theory',
            fields=[
                ('theory_id', models.AutoField(db_column='Theory_id', primary_key=True, serialize=False)),
                ('theorytitle', models.CharField(blank=True, db_column='TheoryTitle', max_length=40, null=True)),
                ('theorydesc', models.TextField(blank=True, db_column='TheoryDesc', null=True)),
                ('parent_t', models.ForeignKey(blank=True, db_column='Parent_T_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.theory')),
            ],
            options={
                'db_table': 'theory',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('treatment_id', models.AutoField(db_column='Treatment_id', primary_key=True, serialize=False)),
                ('treattitle', models.CharField(blank=True, db_column='TreatTitle', max_length=200, null=True)),
                ('treatdesc', models.TextField(blank=True, db_column='TreatDesc', null=True)),
            ],
            options={
                'db_table': 'treatment',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('unit_id', models.AutoField(primary_key=True, serialize=False)),
                ('unitname', models.CharField(blank=True, db_column='UnitName', max_length=50, null=True)),
                ('abbreviation', models.CharField(blank=True, db_column='Abbreviation', max_length=10, null=True)),
            ],
            options={
                'db_table': 'unit',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('visit_id', models.AutoField(db_column='Visit_id', primary_key=True, serialize=False)),
                ('visitdate', models.DateField(blank=True, db_column='VisitDate', null=True)),
                ('visittime', models.TimeField(blank=True, db_column='VisitTime', null=True)),
                ('visitdesc', models.TextField(blank=True, db_column='VisitDesc', null=True)),
                ('md', models.ForeignKey(db_column='MD_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='visit_md_set', to='longevity.person')),
                ('patient', models.ForeignKey(db_column='Patient_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'visit',
            },
        ),
        migrations.CreateModel(
            name='TheoryLiterature',
            fields=[
                ('tl_id', models.AutoField(primary_key=True, serialize=False)),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
                ('theory', models.ForeignKey(db_column='Theory_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.theory')),
            ],
            options={
                'db_table': 'theory_literature',
            },
        ),
        migrations.CreateModel(
            name='Targetingligand',
            fields=[
                ('tl_id', models.AutoField(db_column='TL_id', primary_key=True, serialize=False)),
                ('tltitle', models.TextField(blank=True, db_column='TLTitle', null=True)),
                ('tldesc', models.TextField(blank=True, db_column='TLDesc', null=True)),
                ('lt', models.ForeignKey(blank=True, db_column='LT_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.ligandtype')),
            ],
            options={
                'db_table': 'targetingligand',
            },
        ),
        migrations.CreateModel(
            name='TargetArticle',
            fields=[
                ('ta_id', models.AutoField(primary_key=True, serialize=False)),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
                ('target', models.ForeignKey(db_column='Target_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.target')),
            ],
            options={
                'db_table': 'target_article',
            },
        ),
        migrations.CreateModel(
            name='Sympimprove',
            fields=[
                ('si_id', models.AutoField(db_column='SI_id', primary_key=True, serialize=False)),
                ('improvedesc', models.TextField(blank=True, db_column='ImproveDesc', null=True)),
                ('ni', models.ForeignKey(blank=True, db_column='NI_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nodeintervention')),
                ('symptom', models.ForeignKey(blank=True, db_column='Symptom_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.symptom')),
            ],
            options={
                'db_table': 'sympimprove',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supl_id', models.AutoField(db_column='Supl_id', primary_key=True, serialize=False)),
                ('organization', models.ForeignKey(blank=True, db_column='Organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='StrategyIntervention',
            fields=[
                ('si_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('strategy', models.ForeignKey(db_column='Strategy_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interventionstrategy')),
            ],
            options={
                'db_table': 'strategy_intervention',
            },
        ),
        migrations.CreateModel(
            name='StrategyDrawback',
            fields=[
                ('sdb_id', models.AutoField(db_column='sdb_id', primary_key=True, serialize=False)),
                ('drawback', models.ForeignKey(db_column='Drawback_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drawback')),
                ('strategy', models.ForeignKey(db_column='Strategy_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interventionstrategy')),
            ],
            options={
                'db_table': 'strategy_drawback',
            },
        ),
        migrations.CreateModel(
            name='StakeholderPers',
            fields=[
                ('sp_id', models.AutoField(primary_key=True, serialize=False)),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
                ('project', models.ForeignKey(db_column='Project_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
            ],
            options={
                'db_table': 'stakeholderpers',
            },
        ),
        migrations.CreateModel(
            name='StakeholderOrg',
            fields=[
                ('so_id', models.AutoField(primary_key=True, serialize=False)),
                ('organization', models.ForeignKey(db_column='Organization_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
                ('project', models.ForeignKey(db_column='Project_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
                ('role', models.ForeignKey(db_column='Role_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.stakeholderrole')),
            ],
            options={
                'db_table': 'stakeholderorg',
            },
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('sig_id', models.AutoField(db_column='Sig_id', primary_key=True, serialize=False)),
                ('sigsymbol', models.CharField(blank=True, db_column='SigSymbol', max_length=10, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=130, null=True)),
                ('expression', models.CharField(blank=True, db_column='Expression', max_length=15, null=True)),
                ('otherdatabases', models.CharField(blank=True, db_column='OtherDatabases', max_length=30, null=True)),
                ('cellage_id', models.BigIntegerField(blank=True, db_column='CellAge_ID', null=True)),
                ('sig_entrez_id', models.BigIntegerField(blank=True, db_column='Sig_Entrez_id', null=True)),
                ('total', models.IntegerField(blank=True, db_column='Total', null=True)),
                ('p_value', models.DecimalField(blank=True, db_column='P_Value', decimal_places=10, max_digits=12, null=True)),
                ('gene', models.ForeignKey(blank=True, db_column='gene_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
            ],
            options={
                'db_table': 'signature',
                'db_table_comment': 'Genes that are either over-expressed or under-expressed duri',
            },
        ),
        migrations.CreateModel(
            name='SbpathwayTarget',
            fields=[
                ('st_id', models.AutoField(primary_key=True, serialize=False)),
                ('sbp', models.ForeignKey(db_column='SBP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.sbpathway')),
                ('target', models.ForeignKey(db_column='Target_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.target')),
            ],
            options={
                'db_table': 'sbpathway_target',
            },
        ),
        migrations.AddField(
            model_name='sbpathway',
            name='species',
            field=models.ForeignKey(blank=True, db_column='Species_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.species'),
        ),
        migrations.CreateModel(
            name='Requieddata',
            fields=[
                ('rd_id', models.AutoField(db_column='RD_id', primary_key=True, serialize=False)),
                ('rdsubject', models.IntegerField(blank=True, db_column='RDSubject', null=True)),
                ('rdsituation', models.IntegerField(blank=True, db_column='RDSituation', null=True)),
                ('gene', models.ForeignKey(blank=True, db_column='gene_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
                ('intervention', models.ForeignKey(blank=True, db_column='Intervention_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('node', models.ForeignKey(blank=True, db_column='Node_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
                ('step', models.ForeignKey(blank=True, db_column='Step_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.ddstep')),
            ],
            options={
                'db_table': 'requieddata',
            },
        ),
        migrations.CreateModel(
            name='ReqProj',
            fields=[
                ('pr_id', models.AutoField(primary_key=True, serialize=False)),
                ('project', models.ForeignKey(db_column='Project_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
                ('requ', models.ForeignKey(db_column='Requ_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.requirement')),
            ],
            options={
                'db_table': 'req_proj',
            },
        ),
        migrations.CreateModel(
            name='ProtRequ',
            fields=[
                ('pr_id', models.AutoField(primary_key=True, serialize=False)),
                ('prot', models.ForeignKey(db_column='Prot_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.protocol')),
                ('requ', models.ForeignKey(db_column='Requ_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.requirement')),
            ],
            options={
                'db_table': 'prot_requ',
            },
        ),
        migrations.CreateModel(
            name='ProNp',
            fields=[
                ('pnp_id', models.AutoField(primary_key=True, serialize=False)),
                ('np', models.ForeignKey(db_column='NP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle')),
                ('prot', models.ForeignKey(db_column='Prot_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.protocol')),
            ],
            options={
                'db_table': 'pro_np',
            },
        ),
        migrations.CreateModel(
            name='ProjectTheory',
            fields=[
                ('pt_id', models.AutoField(primary_key=True, serialize=False)),
                ('project', models.ForeignKey(blank=True, db_column='Project_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
                ('theory', models.ForeignKey(blank=True, db_column='Theory_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.theory')),
            ],
            options={
                'db_table': 'project_theory',
            },
        ),
        migrations.CreateModel(
            name='ProjectSubject',
            fields=[
                ('ps_id', models.AutoField(primary_key=True, serialize=False)),
                ('Subject', models.ForeignKey(blank=True, db_column='Subject_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.subject')),
                ('project', models.ForeignKey(blank=True, db_column='Project_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
            ],
            options={
                'db_table': 'project_subject',
            },
        ),
        migrations.CreateModel(
            name='ProjectIntervention',
            fields=[
                ('pi_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(blank=True, db_column='Intervention_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('project', models.ForeignKey(blank=True, db_column='Project_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
            ],
            options={
                'db_table': 'project_intervention',
            },
        ),
        migrations.CreateModel(
            name='ProjectDiagnosis',
            fields=[
                ('pd_id', models.AutoField(primary_key=True, serialize=False)),
                ('diagnosis', models.ForeignKey(blank=True, db_column='diagnosis_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnosis')),
                ('project', models.ForeignKey(blank=True, db_column='Project_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
            ],
            options={
                'db_table': 'project_diagnosis',
            },
        ),
        migrations.CreateModel(
            name='Pricelist',
            fields=[
                ('pl_id', models.AutoField(db_column='PL_id', primary_key=True, serialize=False)),
                ('priceitem', models.TextField(blank=True, db_column='PriceItem', null=True)),
                ('plquant', models.DecimalField(blank=True, db_column='PLQuant', decimal_places=4, max_digits=9, null=True)),
                ('plquality', models.IntegerField(blank=True, db_column='PLQuality', null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=8, null=True)),
                ('mat', models.ForeignKey(blank=True, db_column='Mat_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.material')),
                ('supl', models.ForeignKey(blank=True, db_column='Supl_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.supplier')),
            ],
            options={
                'db_table': 'pricelist',
            },
        ),
        migrations.CreateModel(
            name='PersPerstyp',
            fields=[
                ('pp_id', models.AutoField(primary_key=True, serialize=False)),
                ('person', models.OneToOneField(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
                ('pt', models.ForeignKey(db_column='PT_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.perstype')),
            ],
            options={
                'db_table': 'pers_perstyp',
            },
        ),
        migrations.CreateModel(
            name='PersPerscond',
            fields=[
                ('ppc_id', models.AutoField(primary_key=True, serialize=False)),
                ('pc', models.ForeignKey(db_column='PC_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.perscondition')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'pers_perscond',
            },
        ),
        migrations.CreateModel(
            name='PersonIp',
            fields=[
                ('pip_id', models.AutoField(primary_key=True, serialize=False)),
                ('ip', models.ForeignKey(db_column='IP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intellectualproperty')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'person_ip',
            },
        ),
        migrations.CreateModel(
            name='PersonField',
            fields=[
                ('pf_id', models.AutoField(primary_key=True, serialize=False)),
                ('field', models.OneToOneField(db_column='Field_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.field')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'person_field',
            },
        ),
        migrations.CreateModel(
            name='PersonEducation',
            fields=[
                ('pe_id', models.AutoField(primary_key=True, serialize=False)),
                ('edu', models.ForeignKey(db_column='Edu_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.education')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'person_education',
            },
        ),
        migrations.CreateModel(
            name='PersonCountry',
            fields=[
                ('pc_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.ForeignKey(db_column='Country_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.country')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'person_country',
            },
        ),
        migrations.CreateModel(
            name='PersintInt',
            fields=[
                ('pii_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('pi', models.ForeignKey(db_column='PI_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.persint')),
            ],
            options={
                'db_table': 'persint_int',
            },
        ),
        migrations.AddField(
            model_name='persint',
            name='person',
            field=models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person'),
        ),
        migrations.AddField(
            model_name='persint',
            name='visit',
            field=models.ForeignKey(blank=True, db_column='Visit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.visit'),
        ),
        migrations.CreateModel(
            name='PersDiagtest',
            fields=[
                ('pdt_id', models.AutoField(db_column='PDT_id', primary_key=True, serialize=False)),
                ('pdtdate', models.DateField(blank=True, db_column='PDTDate', null=True)),
                ('organization', models.ForeignKey(blank=True, db_column='Organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
                ('visit', models.ForeignKey(blank=True, db_column='Visit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.visit')),
            ],
            options={
                'db_table': 'pers_diagtest',
            },
        ),
        migrations.CreateModel(
            name='PdtDt',
            fields=[
                ('pdtdt_id', models.AutoField(primary_key=True, serialize=False)),
                ('diagnose', models.ForeignKey(db_column='Diagnose_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnostictest')),
                ('pdt', models.ForeignKey(db_column='PDT_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.persdiagtest')),
            ],
            options={
                'db_table': 'pdt_dt',
            },
        ),
        migrations.CreateModel(
            name='PcSymp',
            fields=[
                ('pcs_id', models.AutoField(db_column='PCS_id', primary_key=True, serialize=False)),
                ('symptomobs', models.TextField(blank=True, db_column='SymptomObs', null=True)),
                ('pc', models.ForeignKey(db_column='PC_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.perscondition')),
                ('symptom', models.ForeignKey(blank=True, db_column='Symptom_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.symptom')),
            ],
            options={
                'db_table': 'pc_symp',
            },
        ),
        migrations.CreateModel(
            name='PcBm',
            fields=[
                ('pcbm_id', models.AutoField(db_column='PCBM_id', primary_key=True, serialize=False)),
                ('pcbmvalue', models.DecimalField(blank=True, db_column='PCBMValue', decimal_places=4, max_digits=9, null=True)),
                ('bm', models.ForeignKey(blank=True, db_column='BM_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.biomarker')),
                ('pc', models.ForeignKey(blank=True, db_column='PC_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.perscondition')),
                ('pdt', models.ForeignKey(blank=True, db_column='PDT_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.persdiagtest')),
            ],
            options={
                'db_table': 'pc_bm',
            },
        ),
        migrations.CreateModel(
            name='OrgOrg',
            fields=[
                ('oo_id', models.AutoField(db_column='OO_id', primary_key=True, serialize=False)),
                ('orgrelation', models.TextField(blank=True, db_column='OrgRelation', null=True)),
                ('org_id1', models.ForeignKey(db_column='Org_id1', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
                ('org_id2', models.ForeignKey(db_column='Org_id2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='orgorg_org_id2_set', to='longevity.organization')),
            ],
            options={
                'db_table': 'org_org',
            },
        ),
        migrations.CreateModel(
            name='OrgIp',
            fields=[
                ('oi_id', models.AutoField(primary_key=True, serialize=False)),
                ('ip', models.ForeignKey(db_column='IP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intellectualproperty')),
                ('organization', models.ForeignKey(db_column='Organization_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
            ],
            options={
                'db_table': 'org_ip',
            },
        ),
        migrations.CreateModel(
            name='OrganizationPerson',
            fields=[
                ('op_id', models.AutoField(primary_key=True, serialize=False)),
                ('organization', models.ForeignKey(db_column='Organization_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'organization_person',
            },
        ),
        migrations.CreateModel(
            name='OrganizationCountry',
            fields=[
                ('oc_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.ForeignKey(db_column='Country_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.country')),
                ('organization', models.ForeignKey(db_column='Organization_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
            ],
            options={
                'db_table': 'organization_country',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='ot',
            field=models.ForeignKey(blank=True, db_column='OT_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.orgtype'),
        ),
        migrations.CreateModel(
            name='NpInt',
            fields=[
                ('npi_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('np', models.ForeignKey(db_column='NP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle')),
            ],
            options={
                'db_table': 'np_int',
            },
        ),
        migrations.CreateModel(
            name='NodeTheory',
            fields=[
                ('nt_id', models.AutoField(primary_key=True, serialize=False)),
                ('ntdesc', models.TextField(blank=True, db_column='NTDesc', null=True)),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
                ('theory', models.ForeignKey(db_column='Theory_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.theory')),
            ],
            options={
                'db_table': 'node_theory',
            },
        ),
        migrations.CreateModel(
            name='NodeSymptom',
            fields=[
                ('ns_id', models.AutoField(db_column='NS_id', primary_key=True, serialize=False)),
                ('nsdesc', models.TextField(blank=True, db_column='NSDesc', null=True)),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
                ('symptom', models.ForeignKey(db_column='Symptom_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.symptom')),
            ],
            options={
                'db_table': 'node_symptom',
            },
        ),
        migrations.CreateModel(
            name='NodeSbpathway',
            fields=[
                ('ns_id', models.AutoField(primary_key=True, serialize=False)),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
                ('sbp', models.ForeignKey(db_column='SBP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.sbpathway')),
            ],
            options={
                'db_table': 'node_sbpathway',
            },
        ),
        migrations.CreateModel(
            name='NodeLiterature',
            fields=[
                ('nl_id', models.AutoField(primary_key=True, serialize=False)),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
            ],
            options={
                'db_table': 'node_literature',
            },
        ),
        migrations.CreateModel(
            name='NodeKeyword',
            fields=[
                ('nk_id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.ForeignKey(db_column='Keyword_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.keyword')),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
            ],
            options={
                'db_table': 'node_keyword',
            },
        ),
        migrations.CreateModel(
            name='NodeHallmark',
            fields=[
                ('nh_id', models.AutoField(primary_key=True, serialize=False)),
                ('nhdesc', models.TextField(blank=True, db_column='NHDesc', null=True)),
                ('hallmark', models.ForeignKey(db_column='Hallmark_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.hallmark')),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
            ],
            options={
                'db_table': 'node_hallmark',
            },
        ),
        migrations.CreateModel(
            name='nodegs',
            fields=[
                ('ngs_id', models.AutoField(primary_key=True, serialize=False)),
                ('gs', models.ForeignKey(db_column='gs_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.geneset')),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
            ],
            options={
                'db_table': 'nodegs',
            },
        ),
        migrations.CreateModel(
            name='NodeDiagnosis',
            fields=[
                ('nd_id', models.AutoField(primary_key=True, serialize=False)),
                ('nddesc', models.TextField(blank=True, db_column='nddesc', null=True)),
                ('diagnosis', models.ForeignKey(db_column='diagnosis_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnosis')),
                ('node', models.ForeignKey(db_column='Node_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node')),
            ],
            options={
                'db_table': 'nodediagnosis',
            },
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='tl',
            field=models.ForeignKey(blank=True, db_column='TL_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.targetingligand'),
        ),
        migrations.CreateModel(
            name='Medicalrecord',
            fields=[
                ('mr_id', models.AutoField(db_column='MR_id', primary_key=True, serialize=False)),
                ('mrtitle', models.CharField(blank=True, db_column='MRTitle', max_length=100, null=True)),
                ('mrtype', models.IntegerField(blank=True, db_column='MRType', null=True)),
                ('mrdate', models.DateField(blank=True, db_column='MRDate', null=True)),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'medicalrecord',
            },
        ),
        migrations.CreateModel(
            name='MatPro',
            fields=[
                ('quantity', models.DecimalField(blank=True, db_column='Quantity', decimal_places=2, max_digits=7, null=True)),
                ('minquality', models.IntegerField(blank=True, db_column='MinQuality', db_comment='Minimum quality required', null=True)),
                ('mp_id', models.AutoField(db_column='MP_id', primary_key=True, serialize=False)),
                ('mat', models.ForeignKey(blank=True, db_column='Mat_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.material')),
                ('prot', models.ForeignKey(blank=True, db_column='Prot_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.protocol')),
            ],
            options={
                'db_table': 'mat_pro',
            },
        ),
        migrations.CreateModel(
            name='LitType',
            fields=[
                ('lt_id', models.AutoField(primary_key=True, serialize=False)),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
                ('ltype', models.ForeignKey(db_column='LType_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literaturetype')),
            ],
            options={
                'db_table': 'lit_type',
            },
        ),
        migrations.CreateModel(
            name='LiteratureJournal',
            fields=[
                ('lj_id', models.AutoField(primary_key=True, serialize=False)),
                ('journal', models.ForeignKey(db_column='Journal_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.journal')),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
            ],
            options={
                'db_table': 'literature_journal',
            },
        ),
        migrations.CreateModel(
            name='ISAELiterature',
            fields=[
                ('sael_id', models.AutoField(primary_key=True, serialize=False)),
                ('isae', models.ForeignKey(db_column='isae_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interventionsae')),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
            ],
            options={
                'db_table': 'isae_literature',
            },
        ),
        migrations.CreateModel(
            name='isaecond',
            fields=[
                ('isaec_id', models.AutoField(primary_key=True, serialize=False)),
                ('conditionset', models.IntegerField(blank=True, db_column='conditionset', null=True)),
                ('cond', models.ForeignKey(db_column='cond_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.condition')),
                ('isae', models.ForeignKey(db_column='isae_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interventionsae')),
            ],
            options={
                'db_table': 'isae_cond',
            },
        ),
        migrations.CreateModel(
            name='InterventionTreatment',
            fields=[
                ('it_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('treatment', models.ForeignKey(db_column='Treatment_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.treatment')),
            ],
            options={
                'db_table': 'intervention_treatment',
            },
        ),
        migrations.CreateModel(
            name='InterventionTarget',
            fields=[
                ('it_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.CASCADE, to='longevity.intervention')),
                ('target', models.ForeignKey(db_column='Target_id', on_delete=django.db.models.deletion.CASCADE, to='longevity.target')),
            ],
            options={
                'db_table': 'intervention_target',
            },
        ),
        migrations.CreateModel(
            name='InterventionSbp',
            fields=[
                ('is_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('sbp', models.ForeignKey(db_column='SBP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.sbpathway')),
            ],
            options={
                'db_table': 'intervention_sbp',
            },
        ),
        migrations.AddField(
            model_name='interventionsae',
            name='ae',
            field=models.ForeignKey(db_column='AE_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.sae'),
        ),
        migrations.AddField(
            model_name='interventionsae',
            name='intervention',
            field=models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention'),
        ),
        migrations.AddField(
            model_name='interventionsae',
            name='unit',
            field=models.ForeignKey(blank=True, db_column='unit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.doseunit'),
        ),
        migrations.CreateModel(
            name='InterventionLiterature',
            fields=[
                ('il_id', models.AutoField(primary_key=True, serialize=False)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
            ],
            options={
                'db_table': 'intervention_literature',
            },
        ),
        # migrations.CreateModel(
            # name='InterventionGene',
            # fields=[
                # ('ig_id', models.AutoField(primary_key=True, serialize=False)),
                # ('gene', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
                # ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
            # ],
            # options={
                # 'db_table': 'intervention_gene',
            # },
        # ),
        migrations.CreateModel(
            name='InterventionDrawback',
            fields=[
                ('idb_id', models.AutoField(db_column='idb_id', primary_key=True, serialize=False)),
                ('drawback', models.ForeignKey(db_column='Drawback_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drawback')),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
            ],
            options={
                'db_table': 'intervention_drawback',
            },
        ),
        migrations.CreateModel(
            name='InterventionCf',
            fields=[
                ('icf_id', models.AutoField(db_column='ICF_id', primary_key=True, serialize=False)),
                ('f_min', models.FloatField(blank=True, db_column='F_min', null=True)),
                ('f_max', models.FloatField(blank=True, db_column='F_max', null=True)),
                ('f_weight', models.FloatField(blank=True, db_column='F_weight', null=True)),
                ('f_unit', models.CharField(blank=True, db_column='F_unit', max_length=20, null=True)),
                ('score', models.FloatField(blank=True, db_column='Score', null=True)),
                ('intervention', models.ForeignKey(db_column='Intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention')),
            ],
            options={
                'db_table': 'intervention_cf',
            },
        ),
        migrations.CreateModel(
            name='Improvement',
            fields=[
                ('impr_id', models.AutoField(db_column='Impr_id', primary_key=True, serialize=False)),
                ('avgchange', models.DecimalField(blank=True, db_column='AvgChange', decimal_places=4, max_digits=9, null=True)),
                ('bm', models.ForeignKey(blank=True, db_column='BM_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.biomarker')),
                ('ni', models.ForeignKey(blank=True, db_column='NI_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nodeintervention')),
            ],
            options={
                'db_table': 'improvement',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('imag_id', models.AutoField(db_column='Imag_id', primary_key=True, serialize=False)),
                ('dimage', models.CharField(blank=True, db_column='DImage', max_length=1, null=True)),
                ('dfile', models.CharField(blank=True, db_column='DFile', max_length=1, null=True)),
                ('mr', models.ForeignKey(blank=True, db_column='MR_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.medicalrecord')),
                ('pdt', models.ForeignKey(blank=True, db_column='PDT_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.persdiagtest')),
            ],
            options={
                'db_table': 'image',
            },
        ),
        migrations.CreateModel(
            name='IcfParameter',
            fields=[
                ('icfp_id', models.AutoField(primary_key=True, serialize=False)),
                ('icf', models.ForeignKey(db_column='ICF_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interventioncf')),
                ('parameter', models.ForeignKey(db_column='Parameter_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.parameter')),
            ],
            options={
                'db_table': 'icf_parameter',
            },
        ),
        migrations.CreateModel(
            name='gsgene',
            fields=[
                ('gsg_id', models.AutoField(primary_key=True, serialize=False)),
                ('generole', models.IntegerField(blank=True, db_column='generole', null=True)),
                ('gene', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
                ('gs', models.ForeignKey(db_column='gs_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.geneset')),
            ],
            options={
                'db_table': 'gsgene',
            },
        ),
        migrations.CreateModel(
            name='GeneSpecies',
            fields=[
                ('gs_id', models.AutoField(primary_key=True, serialize=False)),
                ('gene', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
                ('species', models.ForeignKey(db_column='species_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.species')),
            ],
            options={
                'db_table': 'gene_species',
            },
        ),
        migrations.CreateModel(
            name='geneinteraction',
            fields=[
                ('gi_id', models.AutoField(primary_key=True, serialize=False)),
                ('it', models.ForeignKey(db_column='it_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.interactiontype')),
            ],
            options={
                'db_table': 'geneinteraction',
            },
        ),
        migrations.CreateModel(
            name='Genage',
            fields=[
                ('geag_id', models.AutoField(db_column='GeAg_id', primary_key=True, serialize=False)),
                ('genageid', models.BigIntegerField(blank=True, db_column='GenAgeID', null=True)),
                ('gagenename', models.CharField(blank=True, db_column='GAGeneName', max_length=130, null=True)),
                ('gaentrezid', models.BigIntegerField(blank=True, db_column='GAEntrezID', null=True)),
                ('gagenesymbol', models.TextField(blank=True, db_column='GAGeneSymbol', null=True)),
                ('uniport', models.CharField(blank=True, db_column='Uniport', max_length=20, null=True)),
                ('why', models.CharField(blank=True, db_column='Why', max_length=50, null=True)),
                ('gene', models.ForeignKey(blank=True, db_column='gene_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
            ],
            options={
                'db_table': 'genage',
            },
        ),
        migrations.CreateModel(
            name='FieldOrganization',
            fields=[
                ('fo_id', models.AutoField(primary_key=True, serialize=False)),
                ('field', models.ForeignKey(db_column='Field_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.field')),
                ('organization', models.ForeignKey(db_column='Organization_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
            ],
            options={
                'db_table': 'field_organization',
            },
        ),
        migrations.CreateModel(
            name='FieldEducation',
            fields=[
                ('fe_id', models.AutoField(primary_key=True, serialize=False)),
                ('edu', models.ForeignKey(db_column='Edu_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.education')),
                ('field', models.ForeignKey(db_column='Field_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.field')),
            ],
            options={
                'db_table': 'field_education',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('facil_id', models.AutoField(db_column='Facil_id', primary_key=True, serialize=False)),
                ('facilitytitle', models.CharField(blank=True, db_column='FacilityTitle', max_length=255, null=True)),
                ('facilitydesc', models.TextField(blank=True, db_column='FacilityDesc', null=True)),
                ('organization', models.ForeignKey(blank=True, db_column='Organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
            ],
            options={
                'db_table': 'facility',
            },
        ),
        migrations.CreateModel(
            name='ExtfactNp',
            fields=[
                ('efnp_id', models.AutoField(primary_key=True, serialize=False)),
                ('ef', models.ForeignKey(db_column='EF_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.externalfactor')),
                ('np', models.ForeignKey(db_column='NP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle')),
            ],
            options={
                'db_table': 'extfact_np',
            },
        ),
        migrations.CreateModel(
            name='EdgeSbpathway',
            fields=[
                ('es_id', models.AutoField(primary_key=True, serialize=False)),
                ('edge', models.ForeignKey(db_column='Edge_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.edge')),
                ('sbp', models.ForeignKey(db_column='SBP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.sbpathway')),
            ],
            options={
                'db_table': 'edge_sbpathway',
            },
        ),
        migrations.CreateModel(
            name='EdgeLiterature',
            fields=[
                ('el_id', models.AutoField(primary_key=True, serialize=False)),
                ('edge', models.ForeignKey(db_column='Edge_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.edge')),
                ('lit', models.ForeignKey(db_column='Lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
            ],
            options={
                'db_table': 'edge_literature',
            },
        ),
        migrations.AddField(
            model_name='edge',
            name='begin',
            field=models.ForeignKey(db_column='Begin_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.node'),
        ),
        migrations.AddField(
            model_name='edge',
            name='end',
            field=models.ForeignKey(db_column='End_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='edge_end_set', to='longevity.node'),
        ),
        migrations.CreateModel(
            name='DyeNp',
            fields=[
                ('dnp_id', models.AutoField(primary_key=True, serialize=False)),
                ('dye', models.ForeignKey(db_column='Dye_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.dye')),
                ('np', models.ForeignKey(db_column='NP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle')),
            ],
            options={
                'db_table': 'dye_np',
            },
        ),
        migrations.CreateModel(
            name='DrugNp',
            fields=[
                ('dnp_id', models.AutoField(primary_key=True, serialize=False)),
                ('drug', models.ForeignKey(db_column='Drug_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drug')),
                ('np', models.ForeignKey(db_column='NP_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle')),
            ],
            options={
                'db_table': 'drug_np',
            },
        ),
        migrations.CreateModel(
            name='Drugbank',
            fields=[
                ('dbd_id', models.AutoField(primary_key=True, serialize=False)),
                ('drba_id', models.BigIntegerField(db_column='DrBa_id')),
                ('drug', models.ForeignKey(blank=True, db_column='Drug_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drug')),
            ],
            options={
                'db_table': 'drugbank',
            },
        ),
        migrations.CreateModel(
            name='Drugage',
            fields=[
                ('da_id', models.AutoField(primary_key=True, serialize=False)),
                ('drag_id', models.BigIntegerField(db_column='DrAg_id')),
                ('formulation', models.TextField(blank=True, db_column='Formulation', null=True)),
                ('species', models.TextField(blank=True, db_column='Species', null=True)),
                ('lifespanc', models.TextField(blank=True, db_column='LifespanC', null=True)),
                ('maxlifspan', models.TextField(blank=True, db_column='MaxLifspan', null=True)),
                ('strain', models.TextField(blank=True, db_column='Strain', null=True)),
                ('dosage', models.TextField(blank=True, db_column='Dosage', null=True)),
                ('significant', models.IntegerField(blank=True, db_column='Significant', null=True)),
                ('reference', models.TextField(blank=True, db_column='Reference', null=True)),
                ('drug', models.ForeignKey(blank=True, db_column='Drug_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drug')),
            ],
            options={
                'db_table': 'drugage',
            },
        ),
        migrations.AddField(
            model_name='drawback',
            name='dbt',
            field=models.ForeignKey(blank=True, db_column='DBT_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drawbacktype'),
        ),
        migrations.CreateModel(
            name='DiagnosisBm',
            fields=[
                ('dbm_id', models.AutoField(db_column='DBM_id', primary_key=True, serialize=False)),
                ('dbmdesc', models.TextField(blank=True, db_column='DBMDesc', null=True)),
                ('bm', models.ForeignKey(blank=True, db_column='BM_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.biomarker')),
                ('diagnosis', models.ForeignKey(blank=True, db_column='diagnosis_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnosis')),
            ],
            options={
                'db_table': 'diagnosis_bm',
            },
        ),
        migrations.CreateModel(
            name='DiagnoseDt',
            fields=[
                ('ddt_id', models.AutoField(primary_key=True, serialize=False)),
                ('diagnose', models.ForeignKey(db_column='Diagnose_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnostictest')),
                ('diagnosis', models.ForeignKey(db_column='diagnosis_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnosis')),
            ],
            options={
                'db_table': 'diagnose_dt',
            },
        ),
        migrations.CreateModel(
            name='DiagnoseDrawback',
            fields=[
                ('ddb_id', models.AutoField(db_column='ddb_id', primary_key=True, serialize=False)),
                ('diagnose', models.ForeignKey(db_column='Diagnose_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnostictest')),
                ('drawback', models.ForeignKey(db_column='Drawback_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drawback')),
            ],
            options={
                'db_table': 'diagnose_drawback',
            },
        ),
        migrations.CreateModel(
            name='Costanalysis',
            fields=[
                ('cost_id', models.AutoField(db_column='Cost_id', primary_key=True, serialize=False)),
                ('costitem', models.TextField(blank=True, db_column='CostItem', null=True)),
                ('cost', models.DecimalField(blank=True, db_column='Cost', decimal_places=2, max_digits=8, null=True)),
                ('ni', models.ForeignKey(blank=True, db_column='NI_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nodeintervention')),
                ('np', models.ForeignKey(blank=True, db_column='NP_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle')),
                ('parent_c', models.ForeignKey(blank=True, db_column='Parent_c_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.costanalysis')),
            ],
            options={
                'db_table': 'costanalysis',
            },
        ),
        migrations.CreateModel(
            name='ConvTre',
            fields=[
                ('ct_id', models.AutoField(primary_key=True, serialize=False)),
                ('conv', models.ForeignKey(db_column='Conv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.convenience')),
                ('treatment', models.ForeignKey(db_column='Treatment_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.treatment')),
            ],
            options={
                'db_table': 'conv_tre',
            },
        ),
        migrations.CreateModel(
            name='ConvDiagt',
            fields=[
                ('cdt_id', models.AutoField(primary_key=True, serialize=False)),
                ('conv', models.ForeignKey(db_column='Conv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.convenience')),
                ('diagnose', models.ForeignKey(db_column='Diagnose_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.diagnostictest')),
            ],
            options={
                'db_table': 'conv_diagt',
            },
        ),
        migrations.CreateModel(
            name='Contactinfo',
            fields=[
                ('ci_id', models.AutoField(db_column='CI_id', primary_key=True, serialize=False)),
                ('conttype', models.IntegerField(blank=True, db_column='ContType', null=True)),
                ('contact', models.CharField(blank=True, db_column='Contact', max_length=255, null=True)),
                ('lit', models.ForeignKey(blank=True, db_column='Lit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
                ('organization', models.ForeignKey(blank=True, db_column='Organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
                ('person', models.ForeignKey(blank=True, db_column='Person_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'contactinfo',
            },
        ),
        migrations.CreateModel(
            name='Cellage',
            fields=[
                ('ceag_id', models.AutoField(db_column='CeAg_id', primary_key=True, serialize=False)),
                ('hagrid', models.BigIntegerField(blank=True, null=True)),
                ('genesymbol', models.CharField(blank=True, db_column='GeneSymbol', max_length=10, null=True)),
                ('hgncid', models.BigIntegerField(blank=True, null=True)),
                ('entrezid', models.BigIntegerField(blank=True, db_column='entrezID', null=True)),
                ('organism', models.CharField(blank=True, max_length=10, null=True)),
                ('cancer_type', models.CharField(blank=True, max_length=3, null=True)),
                ('senescence_effect', models.CharField(blank=True, max_length=10, null=True)),
                ('cadescription', models.TextField(blank=True, db_column='CADescription', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=25, null=True)),
                ('celltypes', models.CharField(blank=True, db_column='CellTypes', max_length=140, null=True)),
                ('celllines', models.CharField(blank=True, db_column='CellLines', max_length=140, null=True)),
                ('senescencetype', models.CharField(blank=True, db_column='SenescenceType', max_length=30, null=True)),
                ('gene', models.ForeignKey(blank=True, db_column='gene_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.gene')),
            ],
            options={
                'db_table': 'cellage',
                'db_table_comment': 'Genes associated with cellular senescence based on genetic m',
            },
        ),
        migrations.AddField(
            model_name='biomarker',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.unit'),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.AutoField(db_column='Author_id', primary_key=True, serialize=False)),
                ('role', models.IntegerField(blank=True, db_column='Role', null=True)),
                ('affiliation_id', models.BigIntegerField(blank=True, db_column='Affiliation_id', null=True)),
                ('authordesc', models.TextField(blank=True, db_column='AuthorDesc', null=True)),
                ('lit', models.ForeignKey(blank=True, db_column='Lit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
                ('organization', models.ForeignKey(blank=True, db_column='Organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization')),
                ('person', models.ForeignKey(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='AcPerson',
            fields=[
                ('acp_id', models.AutoField(db_column='ACP_id', primary_key=True, serialize=False)),
                ('acdate', models.DateField(blank=True, db_column='ACDate', null=True)),
                ('ac', models.ForeignKey(blank=True, db_column='AC_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.agingclock')),
                ('person', models.ForeignKey(blank=True, db_column='Person_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'ac_person',
            },
        ),
    ]
