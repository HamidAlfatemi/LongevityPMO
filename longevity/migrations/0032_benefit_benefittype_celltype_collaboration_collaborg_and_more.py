# Generated by Django 4.2.1 on 2024-06-24 17:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('longevity', '0031_orgtype_typedesc_alter_orgorg_orgrelation_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='benefit',
            fields=[
                ('benefit_id', models.AutoField(db_column='benefit_id', primary_key=True, serialize=False)),
                ('estvalue', models.DecimalField(blank=True, db_column='estvalue', decimal_places=0, max_digits=10, null=True)),
                ('actvalue', models.DecimalField(blank=True, db_column='actvalue', decimal_places=0, max_digits=10, null=True)),
                ('benefitdesc', models.TextField(blank=True, db_column='benefitdesc', null=True)),
                ('durstart', models.DateField(blank=True, db_column='durstart', null=True)),
                ('durend', models.DateField(blank=True, db_column='dursend', null=True)),
            ],
            options={
                'db_table': 'benefit',
            },
        ),
        migrations.CreateModel(
            name='benefittype',
            fields=[
                ('bt_id', models.AutoField(db_column='bt_id', primary_key=True, serialize=False)),
                ('benefittitle', models.CharField(blank=True, db_column='benefittitle', max_length=255, null=True)),
            ],
            options={
                'db_table': 'benefittype',
            },
        ),
        migrations.CreateModel(
            name='celltype',
            fields=[
                ('ct_id', models.AutoField(db_column='ct_id', primary_key=True, serialize=False)),
                ('cttitle', models.CharField(blank=True, db_column='cttitle', max_length=100, null=True)),
            ],
            options={
                'db_table': 'celltype',
            },
        ),
        migrations.CreateModel(
            name='collaboration',
            fields=[
                ('collab_id', models.AutoField(db_column='collab_id', primary_key=True, serialize=False)),
                ('collabtitle', models.CharField(blank=True, db_column='collabtitle', max_length=150, null=True)),
                ('collabdesc', models.TextField(blank=True, db_column='collabdesc', null=True)),
                ('collabstart', models.DateField(blank=True, db_column='collabstart', null=True)),
                ('collabend', models.DateField(blank=True, db_column='collabend', null=True)),
            ],
            options={
                'db_table': 'collaboration',
            },
        ),
        migrations.CreateModel(
            name='collaborg',
            fields=[
                ('co_id', models.AutoField(primary_key=True, serialize=False)),
                ('collab', models.ForeignKey(blank=True, db_column='collab_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.collaboration')),
            ],
            options={
                'db_table': 'collaborg',
            },
        ),
        migrations.CreateModel(
            name='collabpers',
            fields=[
                ('cp_id', models.AutoField(primary_key=True, serialize=False)),
                ('collab', models.ForeignKey(blank=True, db_column='collab_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.collaboration')),
                ('person', models.ForeignKey(blank=True, db_column='person_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person')),
            ],
            options={
                'db_table': 'collabpers',
            },
        ),
        migrations.CreateModel(
            name='collabproject',
            fields=[
                ('cp_id', models.AutoField(primary_key=True, serialize=False)),
                ('collab', models.ForeignKey(blank=True, db_column='collab_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.collaboration')),
                ('project', models.ForeignKey(blank=True, db_column='project_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project')),
            ],
            options={
                'db_table': 'collabproj',
            },
        ),
        migrations.CreateModel(
            name='component',
            fields=[
                ('comp_id', models.AutoField(db_column='comp_id', primary_key=True, serialize=False)),
                ('comptitle', models.CharField(blank=True, db_column='comptitle', max_length=100, null=True)),
                ('compdesc', models.TextField(blank=True, db_column='compdesc', null=True)),
            ],
            options={
                'db_table': 'component',
            },
        ),
        migrations.CreateModel(
            name='comptype',
            fields=[
                ('ct_id', models.AutoField(db_column='ct_id', primary_key=True, serialize=False)),
                ('ctypetitle', models.CharField(blank=True, db_column='ctypetitle', max_length=50, null=True)),
                ('ctypedesc', models.TextField(blank=True, db_column='ctypedesc', null=True)),
            ],
            options={
                'db_table': 'comptype',
            },
        ),
        migrations.CreateModel(
            name='edgecelltype',
            fields=[
                ('ect_id', models.AutoField(db_column='ect_id', primary_key=True, serialize=False)),
                ('ct', models.ForeignKey(blank=True, db_column='ct_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.celltype')),
            ],
            options={
                'db_table': 'edgecelltype',
            },
        ),
        migrations.CreateModel(
            name='edgeprotein',
            fields=[
                ('ep_id', models.AutoField(db_column='ep_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'edgeprotein',
            },
        ),
        migrations.CreateModel(
            name='edgetissue',
            fields=[
                ('et_id', models.AutoField(db_column='et_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'edgetissue',
            },
        ),
        migrations.CreateModel(
            name='extfactnpint',
            fields=[
                ('efnpint_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'extfactnpint',
            },
        ),
        migrations.CreateModel(
            name='nodecelltype',
            fields=[
                ('nct_id', models.AutoField(db_column='nct_id', primary_key=True, serialize=False)),
                ('ct', models.ForeignKey(blank=True, db_column='ct_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.celltype')),
            ],
            options={
                'db_table': 'nodecelltype',
            },
        ),
        migrations.CreateModel(
            name='nodenodetissue',
            fields=[
                ('nt_id', models.AutoField(db_column='nt_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'nodetissue',
            },
        ),
        migrations.CreateModel(
            name='nodeprotein',
            fields=[
                ('np_id', models.AutoField(db_column='np_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'nodeprotein',
            },
        ),
        migrations.CreateModel(
            name='npcomponent',
            fields=[
                ('npc_id', models.AutoField(db_column='npc_id', primary_key=True, serialize=False)),
                ('amount', models.FloatField(blank=True, db_column='amount', null=True)),
                ('comp', models.ForeignKey(db_column='comp_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.component')),
            ],
            options={
                'db_table': 'npcomponent',
            },
        ),
        migrations.CreateModel(
            name='npintlit',
            fields=[
                ('npil_id', models.AutoField(primary_key=True, serialize=False)),
                ('lit', models.ForeignKey(db_column='lit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.literature')),
            ],
            options={
                'db_table': 'npintlit',
            },
        ),
        migrations.CreateModel(
            name='orgot',
            fields=[
                ('oot_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ortot',
            },
        ),
        migrations.CreateModel(
            name='protein',
            fields=[
                ('protein_id', models.AutoField(db_column='protein_id', primary_key=True, serialize=False)),
                ('proteinname', models.CharField(blank=True, db_column='proteinname', max_length=100, null=True)),
                ('uniportid', models.CharField(blank=True, db_column='uniportid', max_length=6, null=True)),
                ('gene', models.ForeignKey(blank=True, db_column='gene_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.gene')),
            ],
            options={
                'db_table': 'protein',
            },
        ),
        migrations.CreateModel(
            name='tissue',
            fields=[
                ('tissue_id', models.AutoField(db_column='tissue_id', primary_key=True, serialize=False)),
                ('tissuetitle', models.CharField(blank=True, db_column='tissuetitle', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tissue',
            },
        ),
        migrations.RemoveField(
            model_name='drugage',
            name='drug',
        ),
        migrations.RemoveField(
            model_name='drugnp',
            name='drug',
        ),
        migrations.RemoveField(
            model_name='drugnp',
            name='np',
        ),
        migrations.RemoveField(
            model_name='dyenp',
            name='dye',
        ),
        migrations.RemoveField(
            model_name='dyenp',
            name='np',
        ),
        migrations.RemoveField(
            model_name='extfactnp',
            name='ef',
        ),
        migrations.RemoveField(
            model_name='extfactnp',
            name='np',
        ),
        migrations.RemoveField(
            model_name='targetingligand',
            name='lt',
        ),
        migrations.RemoveField(
            model_name='drugbank',
            name='drba_id',
        ),
        migrations.RemoveField(
            model_name='drugbank',
            name='drug',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='agent',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='dimx',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='dimy',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='dimz',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='ecdist',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='echarge',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='effectspeed',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='efficiency',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='excretion',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='immuneresist',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='linker',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='linkerdesc',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='nc',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='specificity',
        ),
        migrations.RemoveField(
            model_name='nanoparticle',
            name='tl',
        ),
        migrations.RemoveField(
            model_name='npint',
            name='np',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='ot',
        ),
        migrations.AddField(
            model_name='drugbank',
            name='dbentry',
            field=models.TextField(blank=True, db_column='dbentry', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='cellularuptake',
            field=models.DecimalField(blank=True, db_column='cellularuptake', decimal_places=2, max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='circulationrate',
            field=models.DecimalField(blank=True, db_column='circulationrate', decimal_places=0, max_digits=3, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='clearancerate',
            field=models.DecimalField(blank=True, db_column='clearancerate', decimal_places=0, max_digits=3, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='hydrophmethod',
            field=models.IntegerField(blank=True, choices=[(1, 'Contact Angle Measurement'), (2, 'Partition Coefficient (Log P)'), (3, 'Hydrophobic Interaction Chromatography (HIC)'), (4, 'Hydropathy Index (Kyte-Doolittle Scale'), (5, 'Water Solubility')], db_column='hydrophmethod', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='immuneresistance',
            field=models.FloatField(blank=True, db_column='immuneresistance', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='immunmethod',
            field=models.IntegerField(blank=True, choices=[(1, 'Phagocytosis Assays'), (2, 'Complement Activation Assays'), (3, 'Cytokine Release Assays'), (4, 'Surface Protein Adsorption Studies'), (5, 'In Vivo Biodistribution Studies')], db_column='immunmethod', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='immunogenicity',
            field=models.TextField(blank=True, db_column='immunogenicity', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='maxdimx',
            field=models.DecimalField(blank=True, db_column='maxdimx', decimal_places=0, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='maxdimy',
            field=models.DecimalField(blank=True, db_column='maxdimy', decimal_places=0, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='maxdimz',
            field=models.DecimalField(blank=True, db_column='maxdimz', decimal_places=0, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='maxnegcharge',
            field=models.DecimalField(blank=True, db_column='maxnegcharge', decimal_places=1, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='maxposcharge',
            field=models.DecimalField(blank=True, db_column='maxposcharge', decimal_places=1, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='mindimx',
            field=models.DecimalField(blank=True, db_column='mindimx', decimal_places=0, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='mindimy',
            field=models.DecimalField(blank=True, db_column='mindimy', decimal_places=0, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='mindimz',
            field=models.DecimalField(blank=True, db_column='mindimz', decimal_places=0, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='minnegcharge',
            field=models.DecimalField(blank=True, db_column='minnegcharge', decimal_places=1, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='minposcharge',
            field=models.DecimalField(blank=True, db_column='minposcharge', decimal_places=1, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='npreq',
            field=models.ForeignKey(blank=True, db_column='npreq_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle'),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='offtarget',
            field=models.FloatField(blank=True, db_column='offtarget', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='offtargetmethod',
            field=models.IntegerField(blank=True, choices=[(1, 'Flow Cytometry'), (2, 'Imaging Techniques'), (3, 'Mass Spectrometry'), (4, 'Bio-distribution Studies'), (5, 'Proteomics and Genomics Approaches')], db_column='offtargetmethod', null=True),
        ),
        migrations.AddField(
            model_name='nanoparticle',
            name='targetingefficiency',
            field=models.DecimalField(blank=True, db_column='targetingefficiency', decimal_places=2, max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='node',
            name='dashed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='npint',
            name='manufacturenp',
            field=models.ForeignKey(blank=True, db_column='manufacturenp_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='npint_manufacture_set', to='longevity.nanoparticle'),
        ),
        migrations.AddField(
            model_name='npint',
            name='researchnp',
            field=models.ForeignKey(blank=True, db_column='researchnp_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle'),
        ),
        migrations.AlterField(
            model_name='edge',
            name='color',
            field=models.IntegerField(blank=True, choices=[(1, 'Blue: Genetics, Nucleus, Endoplasmic Reticulum'), (2, 'Light Brown (Dark Yellow): Cytoplasmic molecules'), (3, 'Light Blue (Cyan): Mitochondria'), (4, 'Brown: Extracellular Substances & Structures'), (5, 'Pink (Magenta): Controlled Degradation & Turnover'), (6, 'Green: Beneficial process or intervention'), (7, 'Purple (Violet): Signaling Pathway'), (8, 'Red: Damaging Substance or Process'), (9, 'Black: Senescence Physiology'), (10, 'Orange'), (11, 'Yellow')], db_column='Color', null=True),
        ),
        migrations.AlterField(
            model_name='edge',
            name='edgeshape',
            field=models.IntegerField(blank=True, choices=[(1, 'Causal Sequence of Events or Enhancement'), (2, 'Very Important Pathway'), (3, 'Movement, Transport, or Flow of things')], db_column='EdgeShape', null=True),
        ),
        migrations.AlterField(
            model_name='externalfactor',
            name='ef_id',
            field=models.AutoField(db_column='ef_id', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='externalfactor',
            name='efdesc',
            field=models.TextField(blank=True, db_column='efdesc', null=True),
        ),
        migrations.AlterField(
            model_name='externalfactor',
            name='eftype',
            field=models.IntegerField(blank=True, db_column='eftype', null=True),
        ),
        migrations.AlterField(
            model_name='intervention',
            name='intoutput',
            field=models.IntegerField(blank=True, choices=[(1, 'Alleviation of Symptoms'), (2, 'Help to live with disease'), (3, 'Slow down the progress of disease'), (4, 'Stop the progress of disease and have it under control'), (5, 'Stop the progress of disease with no need for control'), (6, 'Prevention'), (7, 'Reverse the body, tissue, cell, or gene back to healthy condition')], db_column='IntOutput', null=True),
        ),
        migrations.AlterField(
            model_name='interventionstep',
            name='condition',
            field=models.IntegerField(blank=True, choices=[(1, 'Not Started'), (2, 'Ongoing'), (3, 'On Hold'), (4, 'Stopped'), (5, 'Done')], db_column='condition', null=True),
        ),
        migrations.AlterField(
            model_name='nanoparticle',
            name='hydrophobicity',
            field=models.FloatField(blank=True, db_column='hydrophobicity', null=True),
        ),
        migrations.AlterField(
            model_name='nanoparticle',
            name='np_id',
            field=models.AutoField(db_column='np_id', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='nanoparticle',
            name='npdesc',
            field=models.TextField(blank=True, db_column='npdesc', null=True),
        ),
        migrations.AlterField(
            model_name='nanoparticle',
            name='nptitle',
            field=models.CharField(blank=True, db_column='nptitle', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='nanoparticle',
            name='shape',
            field=models.IntegerField(blank=True, choices=[(1, 'Spherical'), (2, 'Rod-shaped (nanorods)'), (3, 'Cubic'), (4, 'Platelet-shaped (nanosheets)'), (5, 'Tubular (nanotubes)'), (6, 'Star-shaped (nanostars)'), (7, 'Branched (nanobranches)'), (8, 'Flower-shaped (nanoflowers)'), (9, 'Hollow (nanocages, nanospheres)')], db_column='shape', null=True),
        ),
        migrations.AlterField(
            model_name='node',
            name='nodeshape',
            field=models.IntegerField(blank=True, choices=[(1, '1- Rectangles - Things: Quantities or Pools of Molecules, Cells, Substances, etc.  Or Process, Action, Change, or Reaction'), (2, 'Gradual Accumulation or Increase in Quantity or Mass with Aging'), (3, 'Gradual Loss or Decrease in Quantity or Mass with Aging'), (4, 'Environmental Factors'), (5, 'External Intervention'), (6, 'Physiological Condition (Senescence)'), (7, 'Container')], db_column='NodeShape', null=True),
        ),
        migrations.AlterField(
            model_name='npint',
            name='intervention',
            field=models.ForeignKey(db_column='intervention_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.intervention'),
        ),
        migrations.AlterField(
            model_name='orgorg',
            name='orgrelation',
            field=models.TextField(blank=True, db_column='OrgRelation', null=True),
        ),
        migrations.AlterModelTable(
            name='npint',
            table='npint',
        ),
        migrations.DeleteModel(
            name='Cellenteragent',
        ),
        migrations.DeleteModel(
            name='Drug',
        ),
        migrations.DeleteModel(
            name='Drugage',
        ),
        migrations.DeleteModel(
            name='DrugNp',
        ),
        migrations.DeleteModel(
            name='Dye',
        ),
        migrations.DeleteModel(
            name='DyeNp',
        ),
        migrations.DeleteModel(
            name='ExtfactNp',
        ),
        migrations.DeleteModel(
            name='Ligandtype',
        ),
        migrations.DeleteModel(
            name='Linker',
        ),
        migrations.DeleteModel(
            name='Nanocarrier',
        ),
        migrations.DeleteModel(
            name='Targetingligand',
        ),
        migrations.AddField(
            model_name='orgot',
            name='organization',
            field=models.ForeignKey(blank=True, db_column='organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization'),
        ),
        migrations.AddField(
            model_name='orgot',
            name='ot',
            field=models.ForeignKey(blank=True, db_column='ot_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.orgtype'),
        ),
        migrations.AddField(
            model_name='npintlit',
            name='npi',
            field=models.ForeignKey(db_column='npi_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.npint'),
        ),
        migrations.AddField(
            model_name='npcomponent',
            name='np',
            field=models.ForeignKey(db_column='np_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.nanoparticle'),
        ),
        migrations.AddField(
            model_name='npcomponent',
            name='unit',
            field=models.ForeignKey(db_column='unit_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.unit'),
        ),
        migrations.AddField(
            model_name='nodeprotein',
            name='node',
            field=models.ForeignKey(blank=True, db_column='node_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.node'),
        ),
        migrations.AddField(
            model_name='nodeprotein',
            name='protein',
            field=models.ForeignKey(blank=True, db_column='protein_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.protein'),
        ),
        migrations.AddField(
            model_name='nodenodetissue',
            name='node',
            field=models.ForeignKey(blank=True, db_column='node_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.node'),
        ),
        migrations.AddField(
            model_name='nodenodetissue',
            name='tissue',
            field=models.ForeignKey(blank=True, db_column='tissue_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.tissue'),
        ),
        migrations.AddField(
            model_name='nodecelltype',
            name='node',
            field=models.ForeignKey(blank=True, db_column='node_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.node'),
        ),
        migrations.AddField(
            model_name='extfactnpint',
            name='ef',
            field=models.ForeignKey(db_column='ef_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.externalfactor'),
        ),
        migrations.AddField(
            model_name='extfactnpint',
            name='npi',
            field=models.ForeignKey(db_column='npi_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.npint'),
        ),
        migrations.AddField(
            model_name='edgetissue',
            name='edge',
            field=models.ForeignKey(blank=True, db_column='edge_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.edge'),
        ),
        migrations.AddField(
            model_name='edgetissue',
            name='tissue',
            field=models.ForeignKey(blank=True, db_column='tissue_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.tissue'),
        ),
        migrations.AddField(
            model_name='edgeprotein',
            name='edge',
            field=models.ForeignKey(blank=True, db_column='edge_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.edge'),
        ),
        migrations.AddField(
            model_name='edgeprotein',
            name='protein',
            field=models.ForeignKey(blank=True, db_column='protein_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.protein'),
        ),
        migrations.AddField(
            model_name='edgecelltype',
            name='edge',
            field=models.ForeignKey(blank=True, db_column='edge_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='longevity.edge'),
        ),
        migrations.AddField(
            model_name='component',
            name='ct',
            field=models.ForeignKey(db_column='ct_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.comptype'),
        ),
        migrations.AddField(
            model_name='component',
            name='dbd',
            field=models.ForeignKey(db_column='dbd_id', on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.drugbank'),
        ),
        migrations.AddField(
            model_name='collaborg',
            name='organization',
            field=models.ForeignKey(blank=True, db_column='organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization'),
        ),
        migrations.AddField(
            model_name='benefit',
            name='bt',
            field=models.ForeignKey(blank=True, db_column='bt_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.benefittype'),
        ),
        migrations.AddField(
            model_name='benefit',
            name='collab',
            field=models.ForeignKey(blank=True, db_column='collab_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.collaboration'),
        ),
        migrations.AddField(
            model_name='benefit',
            name='organization',
            field=models.ForeignKey(blank=True, db_column='organization_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.organization'),
        ),
        migrations.AddField(
            model_name='benefit',
            name='pbenefit',
            field=models.ForeignKey(blank=True, db_column='pbenefit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.benefit'),
        ),
        migrations.AddField(
            model_name='benefit',
            name='person',
            field=models.ForeignKey(blank=True, db_column='person_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.person'),
        ),
        migrations.AddField(
            model_name='benefit',
            name='poject',
            field=models.ForeignKey(blank=True, db_column='project_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='longevity.project'),
        ),
    ]
